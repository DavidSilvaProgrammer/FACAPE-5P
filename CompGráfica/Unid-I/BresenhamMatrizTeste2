#include <stdio.h>

#define ROWS 10
#define COLS 20

void bresenham(int x0, int y0, int x1, int y1, int matrix[ROWS][COLS]) {
    int dx = x1 - x0;
    int dy = y1 - y0;
    int sx, sy, err, e2;

    if (dy < 0) {
        dy = -dy;
        sy = -1;
    } else {
        sy = 1;
    }

    if (dx < 0) {
        dx = -dx;
        sx = -1;
    } else {
        sx = 1;
    }

    err = dx - dy;

    while (x0 != x1 || y0 != y1) {
        if (x0 >= 0 && x0 < COLS && y0 >= 0 && y0 < ROWS) {
            matrix[y0][x0] = 1; // Define o pixel como parte da linha
        }

        e2 = 2 * err;
        if (e2 > -dy) {
            err -= dy;
            x0 += sx;
        }
        if (e2 < dx) {
            err += dx;
            y0 += sy;
        }
    }
}

int main() {
    int matrix[ROWS][COLS] = {0}; // Inicializa a matriz com zeros

    // Defina os pontos inicial e final da linha
    int x0 = 2, y0 = 1;
    int x1 = 17, y1 = 8;

    // Desenha a linha usando o algoritmo de Bresenham
    bresenham(x0, y0, x1, y1, matrix);

    // Imprime a matriz
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }

    return 0;
}
